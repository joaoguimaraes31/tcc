package views;

import controllers.CalibrationController;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import models.CalibrationModel;

public class CalibrationPanel extends javax.swing.JPanel {

    private CalibrationController controller;
    private CalibrationModel model;

    public CalibrationPanel(CalibrationController controller) {
        this.controller = controller;
        model = controller.getModel();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        settingsPanel = new javax.swing.JPanel();
        convFactorLabel = new javax.swing.JLabel();
        offsetLabel = new javax.swing.JLabel();
        factorSpinner = new javax.swing.JSpinner(model.getFACTOR_SPINNER_MODEL());
        offsetSpinner = new javax.swing.JSpinner(model.getOFFSET_SPINNER_MODEL());
        updateButton = new javax.swing.JButton();
        loadedPanel = new javax.swing.JPanel();
        loadedSettingLabel = new javax.swing.JLabel();
        resetButton = new javax.swing.JButton();
        chartsPanel = new javax.swing.JPanel();
        voltageChartLabel = new javax.swing.JLabel();
        measurementChartLabel = new javax.swing.JLabel();
        sensorPanel = new javax.swing.JPanel();
        sensorLabel = new javax.swing.JLabel();
        sensorComboBox = new javax.swing.JComboBox<>();
        controlPanel = new javax.swing.JPanel();
        startButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        serialPortPanel = new javax.swing.JPanel();
        serialPortLabel = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setMinimumSize(new java.awt.Dimension(626, 569));
        setPreferredSize(new java.awt.Dimension(626, 569));

        settingsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Calibration Settings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 17))); // NOI18N
        settingsPanel.setEnabled(false);

        convFactorLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        convFactorLabel.setText("Conv. Factor:");
        convFactorLabel.setEnabled(false);

        offsetLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        offsetLabel.setText("Offset:");
        offsetLabel.setEnabled(false);

        factorSpinner.setEnabled(false);

        offsetSpinner.setEnabled(false);

        updateButton.setText("Update");
        updateButton.setToolTipText("Conversion factor applied first, only after that offset is applied.");
        updateButton.setEnabled(false);
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout settingsPanelLayout = new javax.swing.GroupLayout(settingsPanel);
        settingsPanel.setLayout(settingsPanelLayout);
        settingsPanelLayout.setHorizontalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsPanelLayout.createSequentialGroup()
                        .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(offsetLabel)
                            .addComponent(convFactorLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(factorSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(offsetSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsPanelLayout.createSequentialGroup()
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        settingsPanelLayout.setVerticalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(convFactorLabel)
                    .addComponent(factorSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(offsetLabel)
                    .addComponent(offsetSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        loadedPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Loaded Settings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 16))); // NOI18N

        loadedSettingLabel.setText("default");

        resetButton.setText("Reset");

        javax.swing.GroupLayout loadedPanelLayout = new javax.swing.GroupLayout(loadedPanel);
        loadedPanel.setLayout(loadedPanelLayout);
        loadedPanelLayout.setHorizontalGroup(
            loadedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loadedPanelLayout.createSequentialGroup()
                .addGap(187, 187, 187)
                .addComponent(loadedSettingLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(resetButton)
                .addGap(48, 48, 48))
        );
        loadedPanelLayout.setVerticalGroup(
            loadedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadedPanelLayout.createSequentialGroup()
                .addGroup(loadedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadedSettingLabel)
                    .addComponent(resetButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        chartsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Charts", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 20))); // NOI18N
        chartsPanel.setEnabled(false);

        voltageChartLabel.setText("jLabel5");
        voltageChartLabel.setEnabled(false);

        measurementChartLabel.setText("jLabel3");
        measurementChartLabel.setEnabled(false);

        javax.swing.GroupLayout chartsPanelLayout = new javax.swing.GroupLayout(chartsPanel);
        chartsPanel.setLayout(chartsPanelLayout);
        chartsPanelLayout.setHorizontalGroup(
            chartsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chartsPanelLayout.createSequentialGroup()
                .addGroup(chartsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(voltageChartLabel)
                    .addComponent(measurementChartLabel))
                .addGap(0, 349, Short.MAX_VALUE))
        );
        chartsPanelLayout.setVerticalGroup(
            chartsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chartsPanelLayout.createSequentialGroup()
                .addComponent(voltageChartLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(measurementChartLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sensorPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sensor Selection", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 17))); // NOI18N
        sensorPanel.setFont(new java.awt.Font("Ubuntu", 0, 17)); // NOI18N

        sensorLabel.setText("Sensor:");

        sensorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Themocouple 1", "Themocouple 2", "Load Cell 1", "Load Cell 2", "Accelerometer", "CKP" }));
        sensorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sensorComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sensorPanelLayout = new javax.swing.GroupLayout(sensorPanel);
        sensorPanel.setLayout(sensorPanelLayout);
        sensorPanelLayout.setHorizontalGroup(
            sensorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sensorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sensorLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sensorPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sensorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        sensorPanelLayout.setVerticalGroup(
            sensorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sensorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sensorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sensorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        controlPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Calibration Control", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 17))); // NOI18N

        startButton.setText("Start Calibration");
        startButton.setEnabled(false);
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        stopButton.setText("Stop Calibration");
        stopButton.setEnabled(false);
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(stopButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(startButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stopButton, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                .addContainerGap())
        );

        serialPortPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Serial Port", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 16))); // NOI18N

        serialPortLabel.setText("null");

        javax.swing.GroupLayout serialPortPanelLayout = new javax.swing.GroupLayout(serialPortPanel);
        serialPortPanel.setLayout(serialPortPanelLayout);
        serialPortPanelLayout.setHorizontalGroup(
            serialPortPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serialPortPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(serialPortLabel)
                .addContainerGap())
        );
        serialPortPanelLayout.setVerticalGroup(
            serialPortPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serialPortPanelLayout.createSequentialGroup()
                .addComponent(serialPortLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(chartsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(sensorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(controlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(settingsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(serialPortPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(loadedPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sensorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(settingsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(serialPortPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chartsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        if (controller.getCommunicator().isConnected()) {
            chartsPanel.setEnabled(true);
            voltageChartLabel.setEnabled(true);
            measurementChartLabel.setEnabled(true);

            sensorPanel.setEnabled(false);
            sensorComboBox.setEnabled(false);
            sensorLabel.setEnabled(false);

            startButton.setEnabled(false);
            stopButton.setEnabled(true);

            settingsPanel.setEnabled(true);
            convFactorLabel.setEnabled(true);
            factorSpinner.setEnabled(true);
            offsetLabel.setEnabled(true);
            offsetSpinner.setEnabled(true);
            updateButton.setEnabled(true);

            loadedPanel.setEnabled(false);
            loadedSettingLabel.setEnabled(false);
            resetButton.setEnabled(false);

            factorSpinner.setValue(model.getCalibrationValues()[0][sensorComboBox.getSelectedIndex()]);
            offsetSpinner.setValue(model.getCalibrationValues()[1][sensorComboBox.getSelectedIndex()]);
        }

    }//GEN-LAST:event_startButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        chartsPanel.setEnabled(false);
        voltageChartLabel.setEnabled(false);
        measurementChartLabel.setEnabled(false);

        sensorPanel.setEnabled(true);
        sensorComboBox.setEnabled(true);
        sensorLabel.setEnabled(true);

        startButton.setEnabled(true);
        stopButton.setEnabled(false);

        settingsPanel.setEnabled(false);
        convFactorLabel.setEnabled(false);
        factorSpinner.setEnabled(false);
        offsetLabel.setEnabled(false);
        offsetSpinner.setEnabled(false);
        updateButton.setEnabled(false);

        loadedPanel.setEnabled(true);
        loadedSettingLabel.setEnabled(true);
        resetButton.setEnabled(true);
    }//GEN-LAST:event_stopButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed

    }//GEN-LAST:event_updateButtonActionPerformed

    private void sensorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sensorComboBoxActionPerformed
        factorSpinner.setValue(model.getCalibrationValues()[0][sensorComboBox.getSelectedIndex()]);
        offsetSpinner.setValue(model.getCalibrationValues()[1][sensorComboBox.getSelectedIndex()]);
    }//GEN-LAST:event_sensorComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel chartsPanel;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JLabel convFactorLabel;
    private javax.swing.JSpinner factorSpinner;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel loadedPanel;
    private javax.swing.JLabel loadedSettingLabel;
    private javax.swing.JLabel measurementChartLabel;
    private javax.swing.JLabel offsetLabel;
    private javax.swing.JSpinner offsetSpinner;
    private javax.swing.JButton resetButton;
    private javax.swing.JComboBox<String> sensorComboBox;
    private javax.swing.JLabel sensorLabel;
    private javax.swing.JPanel sensorPanel;
    private javax.swing.JLabel serialPortLabel;
    private javax.swing.JPanel serialPortPanel;
    private javax.swing.JPanel settingsPanel;
    private javax.swing.JButton startButton;
    private javax.swing.JButton stopButton;
    private javax.swing.JButton updateButton;
    private javax.swing.JLabel voltageChartLabel;
    // End of variables declaration//GEN-END:variables

    //Getters
    public JPanel getChartsPanel() {
        return chartsPanel;
    }

    public JPanel getControlPanel() {
        return controlPanel;
    }

    public JSpinner getFactorSpinner() {
        return factorSpinner;
    }

    public JPanel getjPanel5() {
        return jPanel5;
    }

    public JPanel getLoadedPanel() {
        return loadedPanel;
    }

    public JLabel getLoadedSettingLabel() {
        return loadedSettingLabel;
    }

    public JLabel getMeasurementChartLabel() {
        return measurementChartLabel;
    }

    public JSpinner getOffsetSpinner() {
        return offsetSpinner;
    }

    public JComboBox<String> getSensorComboBox() {
        return sensorComboBox;
    }

    public JPanel getSensorPanel() {
        return sensorPanel;
    }

    public JLabel getSerialPortLabel() {
        return serialPortLabel;
    }

    public JPanel getSerialPortPanel() {
        return serialPortPanel;
    }

    public JPanel getSettingsPanel() {
        return settingsPanel;
    }

    public JButton getStartButton() {
        return startButton;
    }

    public JButton getStopButton() {
        return stopButton;
    }

    public JButton getUpdateButton() {
        return updateButton;
    }

    public JLabel getVoltageChartLabel() {
        return voltageChartLabel;
    }

    public JLabel getConvFactorLabel() {
        return convFactorLabel;
    }

    public JLabel getOffsetLabel() {
        return offsetLabel;
    }

    public JLabel getSensorLabel() {
        return sensorLabel;
    }

    public JButton getResetButton() {
        return resetButton;
    }

    public void setController(CalibrationController controller) {
        this.controller = controller;
    }

}
